************************************************************************
INSTALL JENKINS WITH DOCKER
************************************************************************

STEP:1 CREATE AWS UBUNTU INSTANCE PORT NO: 8080

STEP:2 INSTALL DOCKER

STEP:3 INSTALL  JDK

STEP:4 INSTALL MAVEN

STEP:5 INSTALL JENKINS

************************************************************************
STEP:1 CREATE AWS UBUNTU INSTANCE PORT NO: 8080
************************************************************************

1. PREPARE AWS INSTANCE(UBUNTU SERVER 22.04 LTS (HVM) SSD VOLUME TYPE)
2. SECURITY : ADD PORT NO:8080 and 80 WITH CUSTOM TCP RULE
3. DOWNLOAD .pem KEY AND CONNECT USING MOBA X-TERM

************************************************************************
CONNECT WITH MOBA X-TERM
************************************************************************ 

open moba x-term
> cd d:   //here d: is my drive
> cd phase-5 //phase-5 is a folder where my .pem key is located

> goto aws>EC2 instance>YourInstance>Connect>SSH>copy example key

************************************************************************ STEP:2 DOCKER INSTALLATION
************************************************************************
link:https://docs.docker.com/engine/install/ubuntu/
------------------------------------------------------------------------
> sudo apt-get update
> sudo apt-get install ca-certificates curl gnupg lsb-release
> sudo mkdir -p /etc/apt/keyrings
> curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
> echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
> sudo apt-get update
> sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

-------to varify the installation----------

> sudo docker -v

	output: Docker version 20.10.21, build baeda1f
************************************************************************
STEP:3 INSTALL JDK
************************************************************************
> sudo apt update
> sudo apt install default-jdk-y

************************************************************************
STEP:4 INSTALL MAVEN
************************************************************************

>sudo apt update
>sudo apt-get install maven

************************************************************************
STEP:5 INSTALL JENKINS
************************************************************************

GOTO>GOOGLE> how to install jenkins on ubuntu
link: https://www.jenkins.io/doc/book/installing/linux/

> curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null

> echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee  /etc/apt/sources.list.d/jenkins.list > /dev/null

> sudo apt-get update
> sudo apt-get install jenkins


1. TO START WITH JENKINS
----------------------------------------
> sudo service jenkins start
> sudo service jenkins status

CONNECT: goto> AWS> EC2 instance> copy public ip:8080 hit enter



2. TO GENERATE SECRET CODE/PASSWORD
-----------------------------------------
> sudo cat /var/lib/jenkins/secrets/initialAdminPassword

------to deal with permission denied error--------------
> sudo chmod 777 /var/run/docker.sock

copy the secret password to jenkins and start installation

click on install suggested plugins / complete the  installation

3. FOR CONTINUOUS INTEGRATION (CI)
------------------------------------------

1. click on insall suggested plugins
2. provide your credentials
3. welcome to jenkins
4. manage plugins> maven integration> click on install suggested plugins>maven integration>click on install without restart
5. goto>dashboard>create>new job>select freestyle project>give name>click on ok 
6> give description
7. sourcemanangement

	GIT:
	URL:
	BRANCHES TO BUILD : */master or */main
8. build trigger
	POLL SCM:
	H/2 * * * *

9. click on Apply and Save

10. BUILD THE PROJECT